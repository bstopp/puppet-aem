node 'agent' {
  File { backup => false, owner => 'aem', group => 'aem' }

  group { 'aem': ensure => 'present' }

  user { 'aem': ensure => 'present', gid => 'aem' }

  file { '/opt/faux':
      ensure => 'directory',
  }

  file { '/opt/faux/crx-quickstart':
      ensure => 'directory',
  }
  file { '/opt/faux/crx-quickstart/bin':
      ensure => 'directory',
  }
  file { '/opt/faux/crx-quickstart/bin/start-env':
      ensure => 'file',
      source => '/vagrant/puppet/files/aem/faux-start-env',
      mode   => '0755',
  }

  file { '/opt/faux/crx-quickstart/bin/start.orig':
      ensure  => 'file',
      content => '',
      mode    => '0755',
  }

  file { '/opt/faux/crx-quickstart/repository':
      ensure => 'directory',
  }

  file { '/opt/faux/crx-quickstart/app':
      ensure => 'directory',
  }

  file { '/opt/faux/crx-quickstart/app/cq-quickstart-6.1.0-standalone.jar':
      ensure  => 'file',
      content => '',
  }

  class { 'java': }

  file { '/opt/aem': ensure => directory }

  \$osgi = [{
    'SegmentNodeStore-Author' => {
      'pid'        => 'org.apache.jackrabbit.oak.plugins.segment.SegmentNodeStoreService',
      'properties' => {
        'tarmk.size'      => 512,
        'pauseCompaction' => true
      }
    },
    'WCMRequestFilter-Author' => {
      'pid'        => 'com.day.cq.wcm.core.WCMRequestFilter',
      'properties' => {
        'wcmfilter.mode' => 'preview'
      }
    }
  }]

  aem::instance { 'author':
      debug_port   => 30303,
      group        => 'vagrant',
      home         => '/opt/aem/author',
      jvm_mem_opts => '-Xmx2048m',
      osgi_configs => \$osgi,
      crx_packages => ['/vagrant/puppet/files/aem/test-1.0.0.zip'],
      source       => '/vagrant/puppet/files/aem/protected/aem-quickstart-6.5.0.jar',
      timeout      => 1200,
      user         => 'vagrant',
  }

  Class['java'] -> File['/opt/aem'] -> Aem::Instance <| |>

  aem::license { 'author':
      customer    => 'puppet-testing',
      group       => 'vagrant',
      home        => '/opt/aem/author',
      license_key => '<%= license %>',
      user        => 'vagrant',
      version     => '6.5.0'
  }

  Aem::License['author']
  -> Aem_installer['author']

  <% unless license.nil? %>
  \$res_props = {
    'jcr:primaryType' => 'nt:unstructured',
    'title'           => 'title string',
    'text'            => 'text string',
    'child'           => {
      'jcr:primaryType' => 'nt:unstructured',
      'property'        => 'value',
      'grandchild'      => {
        'jcr:primaryType' => 'nt:unstructured',
        'child attrib'    => 'another value',
        'array'           => ['this', 'is', 'an', 'array']
      }
    }
  }

  aem_sling_resource { 'test-node':
      ensure         => present,
      path           => '/content/testnode',
      properties     => \$res_props,
      handle_missing => 'remove',
      home           => '/opt/aem/author',
      password       => 'admin',
      username       => 'admin'
  }

  aem::crx::package { 'author-test-pkg':
      ensure      => installed,
      home        => '/opt/aem/author',
      password    => 'admin',
      pkg_group   => 'my_packages',
      pkg_name    => 'test',
      pkg_version => '2.0.0',
      source      => '/vagrant/puppet/files/aem/test-2.0.0.zip',
      type        => 'api',
      username    => 'admin'
  }

  Aem::Instance['author']
  -> Aem_sling_resource['test-node']
  -> Aem::Crx::Package['author-test-pkg']

  <% end %>
}
